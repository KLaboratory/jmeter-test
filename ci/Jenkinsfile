pipeline {
    agent {
        kubernetes {
            // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile 'jenkins-pod.yaml'
            // Or, to avoid YAML:
            // containerTemplate {
            //     name 'shell'
            //     image 'ubuntu'
            //     command 'sleep'
            //     args 'infinity'
            // }
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jmeter
    image: justb4/jmeter:5.4
    command:
    - sleep
    args:
    - infinity
'''
            // Can also wrap individual steps:
            // container('shell') {
            //     sh 'hostname'
            // }
            defaultContainer 'jmeter'
        }
    }

    parameters {
        string name: 'container_name', defaultValue: 'jmeter', description: 'Name of container'
        string name: 'image_timezone', defaultValue: 'America/Guayaquil', description: 'Time zone'
        string name: 'target_host', defaultValue: '192.168.1.121', description: 'Target host'
        string name: 'target_port', defaultValue: '80', description: 'Target port'
    }

    stages {
        stage('Clone repo') {
            steps {
                git branch: 'main', url: 'https://github.com/KLaboratory/jmeter-test.git'
            }
        }
        // Run on Kubernetes
        stage('Run test') {
            steps {
                container('jmeter') {
                    sh 'jmeter -Dlog_level.jmeter=DEBUG \
                        -JTARGET_PROTOCOL=http \
                        -JTARGET_HOST=$target_host -JTARGET_PORT=3000 \
                        -JTARGET_PATH=/api/v1 -JTHREADS=20 \
                        -n -f -t ./test-plan.jmx -l ./test-plan.jtl -j ./jmeter.log \
                        -e -o ./report'
                }
            }
        }

        // Run on local
        /*stage('Execute Sanity test') {
            steps {
                sh 'jmeter -Dlog_level.jmeter=DEBUG \
                        -JTARGET_PROTOCOL=http \
                        -JTARGET_HOST=localhost -JTARGET_PORT=3000 \
                        -JTARGET_PATH=/api/v1 -JTHREADS=20 \
                        -n -f -t ./test-plan.jmx -l ./test-plan.jtl -j ./jmeter.log \
                        -e -o ./report'
            }
        }*/

        // Run on local docker
        /*stage('Execute test') {
            steps {
                sh 'docker run --rm --name jmeter -i \
                        -v ${PWD}:/opt/test -w /opt/test \
                        -e IMAGE_TIMEZONE=\'America/Guayaquil\' \
                        --add-host=host.docker.internal:host-gateway \
                        justb4/jmeter:5.4 \
                        -Dlog_level.jmeter=DEBUG \
                        -JTARGET_PROTOCOL=http \
                        -JTARGET_HOST=192.168.1.121 -JTARGET_PORT=3000 \
                        -JTARGET_PATH=/api/v1 -JTHREADS=20 \
                        -n -f -t ./test-plan.jmx -l ./test-plan.jtl -j ./jmeter.log \
                        -e -o ./report'
            }
        }*/
        stage('Publish Report') {
            steps {
                perfReport filterRegex: '', sourceDataFiles: '*.jtl'
            }
        }
    }
}